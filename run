#!/bin/bash
clean() {
  rm -rf ${HOME}/.m2/repository/mavenversioning
}

pom_file() {
  local version=$1
  cat << EOF > component-to-be-depended-upon/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <artifactId>component-to-be-depended-upon</artifactId>
    <groupId>mavenversioning</groupId>
    <version>$version</version>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
EOF

}

build_dependency() {
  local version=$1
  pom_file $version
  (cd component-to-be-depended-upon && mvn clean install -q)
}

run_test() {
  local tests=$@
  for test in $tests; do
    ( cd $test && /usr/bin/mvn clean test )
  done
}

set -e
clean
#build_dependency 1.2.4-M01_117
#run_test component-depending-on-latest

clean
#build_dependency 1.2.3
#run_test component-depending-on-release

clean
#build_dependency 1.2.2
#run_test component-depending-on-range

clean
#build_dependency 99.9
#run_test component-depending-on-exact-version

clean
build_dependency 1.8-M01+599
build_dependency 1.8-M01+600
build_dependency 1.9-M01+599
run_test component-depending-on-ersatz-snapshot-version